include "jsb.store.conf"

datacube = {
  folder = "../web"
  http-port = 8888
  widgets = {
    path = "widgets"
  }
  queryCache = {
    enabled = true
#  	batchSize = 10
#	closeIteratorTimeout = 60000
#	controllerTickInterval = 5000
  }

  debug = false

  query.translateExtractedIsolatedViews = true
  query.translators = {
#    "DataCube.Providers.SqlTableDataProvider" = "DataCube.Query.Translators.SQLTranslator"
    "DataCube.Providers.SqlTableDataProvider" = "DataCube.Query.Translators.SQLViewsTranslator"
    "DataCube.Providers.InMemoryDataProvider" = "DataCube.Query.Translators.LockiTranslator"
    "DataCube.Providers.JsonFileDataProvider" = "DataCube.Query.Translators.LockiTranslator"
  }

  query.transformers = [
    ## встраивание срезов в запрос
    "DataCube.Query.Transforms.EmbedSlices",
    ## заменить алиасы представляющие поля куба "как есть"
    "DataCube.Query.Transforms.PatchDirectFieldsAliases",
    ## развернуть сложные операторы - подставить выражения
    "DataCube.Query.Transforms.UnwrapComplexOperators",
    ## встроить $globalFilter во все запросы к кубу
    "DataCube.Query.Transforms.PropagateGlobalFilter",
    ## привести фильтры к единому стилю
    "DataCube.Query.Transforms.NormalizeFilters",
    ## упорядочить $select
    "DataCube.Query.Transforms.OrderSelect",
    ## добавить/обновить названия контекстов запросов
    "DataCube.Query.Transforms.DefineContexts",
#    ## встроить тела вьюх в запрос
#    "DataCube.Query.Transforms.EmbedViewQueries",
#    ## объединить одинаковые запросы и вынести во вьюхи
#    "DataCube.Query.Transforms.NestedQueryOptimization",
  ]
  
}
