{
	$name: 'DataCube.Query.Views.ViewsRegistry',
	$singleton: true,

	$server: {
		$require: [
        ],

        _viewTypes: {
        },

		register: function(viewJsb, isMatched){
			if(viewJsb instanceof JSB){
                Log.debug('Registered view type ' + viewJsb.$name);
                $this._viewTypes[viewJsb.$name] = {
                    name: viewJsb.$name,
                    isMatched: function(query, cubeOrDataProvider){
                        return isMatched(query, cubeOrDataProvider);
                    },
                    newInstance: function(){
                        var ViewType = viewJsb.getClass();
                        return new (Function.prototype.bind.apply(ViewType, arguments));
                    },
                }
			} else {
				throw new Error('Invalid view type bean');
			}
		},

		_selectViewType: function(query) {
            for(var viewJsb in $this._viewTypes) {
                if ($this._viewTypes[viewJsb].isMatched(query)) {
                    return $this._viewTypes[viewJsb];
                }
            }
            throw new Error('Unsupported view type for query ' + query.$context);
		},
	}
}